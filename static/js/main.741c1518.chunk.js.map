{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getTime","date","toUTCString","slice","Clock","state","today","Date","secondsTimerId","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","clockNameTimerId","handleToggleClock","event","preventDefault","prevState","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,EAAQC,GACf,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,eAAiB,EALnB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,eAAiBE,OAAOC,aAAY,WACvC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAKd,EAAQ,EAAKK,MAAMC,UAC/B,OAbP,gCAgBE,SACES,GAEIA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDP,KAAKQ,MAAMD,SArBpE,kCAyBE,WACEN,OAAOS,cAAcV,KAAKD,kBA1B9B,oBA6BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAU,EAASP,KAAKQ,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGpB,EAAQM,YA1CnB,GAA2Be,IAAMC,WCVjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAW,UACXC,UAAU,GAHd,EAMEC,iBAAmB,EANrB,EAwBEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKrB,UAAS,SAACsB,GAAD,MAAgB,CAC5BL,UAAWK,EAAUL,cA3B3B,uDAQE,WAA2B,IAAD,OACxBpB,KAAKqB,iBAAmBpB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEgB,UAAWL,QAC1B,MAEHY,SAASC,iBAAiB,cAAe3B,KAAKsB,mBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKsB,qBAd5C,kCAiBE,WACErB,OAAOS,cAAcV,KAAKqB,kBAE1BK,SAASE,oBAAoB,cAAe5B,KAAKsB,mBACjDI,SAASE,oBAAoB,QAAS5B,KAAKsB,qBArB/C,oBA+BE,WACE,MAAgCtB,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAEES,GAAY,cAAC,EAAD,CAAOb,KAAMY,WAtCnC,GAAyBP,IAAMC,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.741c1518.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getTime(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  secondsTimerId = 0;\n\n  componentDidMount(): void {\n    this.secondsTimerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(getTime(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n  ): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.secondsTimerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getTime(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockNameTimerId = 0;\n\n  componentDidMount(): void {\n    this.clockNameTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleToggleClock);\n    document.addEventListener('click', this.handleToggleClock);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.clockNameTimerId);\n\n    document.removeEventListener('contextmenu', this.handleToggleClock);\n    document.removeEventListener('click', this.handleToggleClock);\n  }\n\n  handleToggleClock = (event: MouseEvent): void => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      hasClock: !prevState.hasClock,\n    }));\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}